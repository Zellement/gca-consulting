// This file was generated by the storyblok CLI.
// DO NOT MODIFY THIS FILE BY HAND.
import type { ISbStoryData } from "storyblok";
export interface AssetStoryblok {
  alt: string | null;
  copyright?: string | null;
  fieldtype: "asset";
  id: number;
  filename: string | null;
  name: string;
  title: string | null;
  focus: string | null;
  meta_data?: {
    [k: string]: any;
  };
  source?: string | null;
  is_external_url?: boolean;
  is_private?: boolean;
  src?: string;
  updated_at?: string;
  width?: number | null;
  height?: number | null;
  aspect_ratio?: number | null;
  public_id?: string | null;
  content_type?: string;
  [k: string]: any;
}

export type MultilinkStoryblok =
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      anchor?: string;
      rel?: string;
      title?: string;
      prep?: string;
      linktype: "story";
      story?: {
        name: string;
        created_at?: string;
        published_at?: string;
        id: number;
        uuid: string;
        content?: {
          [k: string]: any;
        };
        slug: string;
        full_slug: string;
        sort_by_date?: null | string;
        position?: number;
        tag_list?: string[];
        is_startpage?: boolean;
        parent_id?: null | number;
        meta_data?: null | {
          [k: string]: any;
        };
        group_id?: string;
        first_published_at?: string;
        release_id?: null | number;
        lang?: string;
        path?: null | string;
        alternates?: any[];
        default_full_slug?: null | string;
        translated_slugs?: null | any[];
        [k: string]: any;
      };
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      linktype: "url";
      rel?: string;
      title?: string;
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      email?: string;
      linktype: "email";
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      linktype: "asset";
      [k: string]: any;
    };

export interface AtomHeroSlideStoryblok {
  media: AssetStoryblok;
  displayText?: string;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  component: "atomHeroSlide";
  _uid: string;
  [k: string]: any;
}

export type MultiassetStoryblok = {
  alt: string | null;
  copyright?: string | null;
  fieldtype: "asset";
  id: number;
  filename: string | null;
  name: string;
  title: string | null;
  focus: string | null;
  meta_data?: {
    [k: string]: any;
  };
  source?: string | null;
  is_external_url?: boolean;
  is_private?: boolean;
  src?: string;
  updated_at?: string;
  width?: number | null;
  height?: number | null;
  aspect_ratio?: number | null;
  public_id?: string | null;
  content_type?: string;
  [k: string]: any;
}[];

export interface AtomMediaBlockStoryblok {
  media?: MultiassetStoryblok;
  component: "atomMediaBlock";
  _uid: string;
  [k: string]: any;
}

export interface RichtextStoryblok {
  type: string;
  content?: RichtextStoryblok[];
  marks?: RichtextStoryblok[];
  attrs?: any;
  text?: string;
  [k: string]: any;
}

export interface AtomTextBlockStoryblok {
  text?: RichtextStoryblok;
  component: "atomTextBlock";
  _uid: string;
  [k: string]: any;
}

export interface DataNavCategoryStoryblok {
  titlePage: ISbStoryData<TemplatePageStoryblok> | string;
  subPages?: (ISbStoryData<TemplatePageStoryblok> | ISbStoryData<TemplateLocationStoryblok> | string)[];
  component: "dataNavCategory";
  _uid: string;
  [k: string]: any;
}

export interface DataSingleReviewStoryblok {
  quote?: string;
  component: "dataSingleReview";
  _uid: string;
  [k: string]: any;
}

export interface DataSocialLinkStoryblok {
  url: string;
  icon: number | string;
  component: "dataSocialLink";
  _uid: string;
  [k: string]: any;
}

export interface MetaGlobalOptionsStoryblok {
  navItems?: DataNavCategoryStoryblok[];
  socialLinks?: (ISbStoryData<DataSocialLinkStoryblok> | string)[];
  component: "metaGlobalOptions";
  _uid: string;
  [k: string]: any;
}

export interface SectionCardBlockStoryblok {
  cards?: (ISbStoryData<TemplatePageStoryblok> | ISbStoryData<TemplateLocationStoryblok> | string)[];
  component: "sectionCardBlock";
  _uid: string;
  [k: string]: any;
}

export interface SectionCardCarouselStoryblok {
  title: string;
  useRecentNews?: boolean;
  cards?: (ISbStoryData<TemplateNewsStoryblok> | ISbStoryData<TemplatePageStoryblok> | string)[];
  component: "sectionCardCarousel";
  _uid: string;
  [k: string]: any;
}

export interface SectionReviewBlockStoryblok {
  showAllAsGrid?: boolean;
  reviews?: (ISbStoryData<DataSingleReviewStoryblok> | string)[];
  component: "sectionReviewBlock";
  _uid: string;
  [k: string]: any;
}

export interface SectionTextMediaStoryblok {
  body?: (AtomMediaBlockStoryblok | AtomTextBlockStoryblok)[];
  component: "sectionTextMedia";
  _uid: string;
  [k: string]: any;
}

export interface TemplateLocationStoryblok {
  hero: AtomHeroSlideStoryblok[];
  tel: string;
  email: string;
  address: string;
  component: "templateLocation";
  _uid: string;
  [k: string]: any;
}

export interface TemplateNewsStoryblok {
  hero: AtomHeroSlideStoryblok[];
  body?: (
    | SectionCardBlockStoryblok
    | SectionCardCarouselStoryblok
    | SectionReviewBlockStoryblok
    | SectionTextMediaStoryblok
  )[];
  component: "templateNews";
  _uid: string;
  [k: string]: any;
}

export interface TemplatePageStoryblok {
  pageOverview?: string;
  hero: AtomHeroSlideStoryblok[];
  body?: (
    | SectionCardBlockStoryblok
    | SectionCardCarouselStoryblok
    | SectionReviewBlockStoryblok
    | SectionTextMediaStoryblok
  )[];
  component: "templatePage";
  _uid: string;
  [k: string]: any;
}
